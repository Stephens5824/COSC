
Powershell is object-orientated ...
System.Management.Automation.dll ...
xfreerdp /u:student /v:x.x.x.x -dynamic- resolution +glyph-cache +clipboard
https://vta.cybbh.space/horizon/project/instances/

pressing f5 runs the whole script window
pressing f8 runs a singluar line in the script window

**** Commands ****
#snytax for awk in pshll -> gc <> | %{($_ -split "\s+")[<>]}
  	### command recon
Get-Command <>
Get-Verb <>
Get-Command -Verb get
Get-Command -Noun
  	### help pages
Get-Help <> -showwindow or -online
Get-help about_*  # explains concepts
update-Help
  	### alias'
User defined or <>
Get-alias -definition <>
set-alias <> <>
remove-item alias:<>
	### Properties?
(Get-Process).ProcessName
(Get-Process -name <>).Kill()
Get-Process | Get-Member
Get-Process | Format-Table name, id
Get-Service | Format-List -AutoSize or -Wrap
	### Write Output and Write Host
write-host writes straight to screen
write-host can be manipulated thru piping
	### Variables
$true & $false
$_ #the current value in the pipe
$x, $y, $z = "1", "2", "3"
'' #takes input literally
"" #allows variables to be used
	### Arrays
$arr is [array]	#tests if var is an array
$arr = 1..4
$arr[1..3] #returns range of array
$arr[1,3] #returns specific index
$jagarr = "joe", "jim", "jan", (1, ('apple', 'pear'), 3), "jay"
$jagarr[3][1][0]
$array = @() #multidimensionial array
	### Hash Table
$Mylst = @{frst = "bob" ; last = "billy" ; mid = "dle"}
$Mylst["frst"]
$Mylst.last
$Mylst.values
$Mylst[$Mylst.keys] or $Mylst.keys
$Mylst.date=get-date
$Mylst.date("data")
$Mylst.Remove("data")
